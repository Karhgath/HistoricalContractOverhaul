@CONTRACT_TYPE:HAS[~genericValue] {
	genericValue = 0
}
@CONTRACT_TYPE:HAS[~genericAdvance] {
	genericAdvance = 0
}
@CONTRACT_TYPE:HAS[~genericReward] {
	genericReward = 0
}
@CONTRACT_TYPE:HAS[~genericPenalty] {
	genericPenalty = 50 // In percent
}
@CONTRACT_TYPE {
	%advanceFunds = 1000 * (@genericValue * 0.5 + @genericAdvance)
	%rewardFunds = 1000 * (@genericValue * 0.5 + @genericReward)
	%rewardReputation = Pow(@rewardFunds/1000, 0.5)
	%failureFunds = @advanceFunds * @genericPenalty
	%failureReputation = @rewardReputation * @genericPenalty
}
@CONTRACT_TYPE:NEEDS[HistoricalBudgets] {
	@advanceFunds = 1000 * (@genericValue * 0.1 + @genericAdvance)
	@rewardFunds = 0
	@rewardReputation = @genericValue + @genericReward
	@failureFunds = 0
	@failureReputation = @advanceFunds * @genericPenalty * 0.001
}
@CONTRACT_TYPE {
	DATA {
		type = float
		name = GenericValueContractsData		
		genericValue = #$../genericValue$ / ContractMultiplier()
		genericAdvance = #$../genericAdvance$ / ContractMultiplier()
		genericReward = #$../genericReward$ / ContractMultiplier()
		genericPenalty = #$../genericPenalty$ * 0.01
	}
}
@CONTRACT_TYPE {
	-genericValue,0=remove
	-genericAdvance,0=remove
	-genericReward,0=remove
	-genericPenalty,0=remove
}