CONTRACT_TYPE {
    name = RecordCrewAltitude
	group = HistoricalRecords
	
    title = Crewed Altitude Record of @altitude km.
    description = We want you to set a new crewed altitude record! Fly/rocket above @altitude km with crew aboard.
	genericTitle = Crewed Altitude Record
    genericDescription = We want you to set a new crewed altitude record! Fly/rocket above the specified altitude with crew aboard.
    synopsis = Set a crewed altitude record of @altitude km.
    completedMessage = Congratulations! You've set a new crewed altitude record!

	autoAccept = true
	cancellable = false
	declinable = false	
	maxSimultaneous = 1

	targetBody = HomeWorld()
	
	// ************************ INFORMATION ************************
	prestige = Trivial
	genericReward = 5
		
	DATA {
		type = List<float>
        altitudes = [ 1, 2.5, 5, 10, 15, 25, 50, 70 ]
	}
	DATA {
		type = float
		altitude = @altitudes.ElementAt(@index)
	}		
	DATA {
		type = float
		index = RecordCrewedAltitudeIndex
	}
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
				RecordCrewedAltitudeIndex = RecordCrewedAltitudeIndex + 1
		}
	}

	// ************************ REQUIREMENTS ************************	
	REQUIREMENT {
		type = Expression
		title = Altitude
		expression = @/index < @/altitudes.Count()
	}

	// ************************ PARAMETERS ************************	
	PARAMETER {
		name = ReachState
		type = ReachState
		minAltitude = @/altitude * 1000
	}	
	PARAMETER {
		name = OneCrew
		type = HasCrew
		minCrew = 1
		maxCrew = 99
		title = Have at least 1 crewmember on board
		hideChildren = true
	}
}