CONTRACT_TYPE {
	name = RecordAltitude
	group = HistoricalRecords

	title = Altitude Record of @altitude km.
	genericTitle = Altitude Record	
	description = We want you to set a new altitude record! Reach @altitude km.
	genericDescription = We want you to set a new altitude record!
	synopsis = Set an altitude record of @altitude km.
	completedMessage = Congratulations! You've set a new altitude record!	

	autoAccept = true
	cancellable = false
	declinable = false	
	maxSimultaneous = 1

	targetBody = HomeWorld()
	
	// ************************ INFORMATION ************************
	prestige = Trivial
	genericReward = 5
		
	DATA {
		type = List<float>
		altitudes = [ 150, 175, 200, 300, 400, 500, 750, 1000 ]
	}
	DATA {
		type = float
		altitude = @altitudes.ElementAt(@index)
	}	
	DATA {
		type = float
		index = RecordAltitudeIndex
	}
	BEHAVIOUR {
		name = IncrementIndex
		type = Expression
		CONTRACT_COMPLETED_SUCCESS {
				RecordAltitudeIndex = RecordAltitudeIndex + 1
		}
	}

	// ************************ REQUIREMENTS ************************	
	REQUIREMENT {
		type = Expression
		title = Altitude
		expression = @/index < @/altitudes.Count()
	}

	// ************************ PARAMETERS ************************	
	PARAMETER {
		name = ReachState
		type = ReachState
		minAltitude = @/altitude * 1000
	}	
}